{{- if .Values.audit.enabled -}}
{{- range $index, $instance := include "particular.audit.instances" . | fromYamlArray }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $instance }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "particular.audit.labels" $ | nindent 4 }}
spec:
  serviceName: {{ $instance }}
  replicas: 1
  {{- with $.Values.audit.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "particular.audit.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "particular.audit.selectorLabels" $ | nindent 8 }}
      {{- with $.Values.audit.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if gt (len $.Values.audit.podAnnotations) 0 }}
      annotations:
      {{- with $.Values.audit.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "particular.audit.serviceAccountName" $ }}
      {{- with $.Values.audit.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.audit.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with $.Values.audit.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      containers:
        - name: servicecontrol-audit
          {{- with $.Values.audit.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "particular.audit.image" $ }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args: ["--setup-and-run"]
          env:
            - name: TRANSPORTTYPE
              value: {{ required "transport.type is required" $.Values.transport.type | quote }}
            - name: CONNECTIONSTRING
              value: {{ required "transport.connectionString is required" $.Values.transport.connectionString | quote }}
            - name: RAVENDB_CONNECTIONSTRING
              value: {{ required "ravenDBUrl is required" $.Values.ravenDBUrl | quote }}
            - name: RAVENDB_DATABASENAME
              value: {{ printf "audit%d" $index | quote }}
            {{- with $.Values.licenseData }}
            - name: PARTICULARSOFTWARE_LICENSE
              value: {{ . | quote }}
            {{- end }}
          {{- with $.Values.audit.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: api
              containerPort: 44444
              protocol: TCP
          livenessProbe:
            {{- toYaml $.Values.audit.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $.Values.audit.readinessProbe | nindent 12 }}
          {{- with $.Values.audit.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with $.Values.audit.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.audit.affinity }}
      {{- $_ := include "particular.audit.patchAffinity" $ }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.audit.topologySpreadConstraints }}
      {{- $_ := include "particular.audit.patchTopologySpreadConstraints" $ }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.audit.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- end -}}